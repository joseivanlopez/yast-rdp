/**
 * File:        clients/rdp_proposal.ycp
 * Package:     Network configuration
 * Summary:     Proposal for Remote Administration
 * Authors:     Arvin Schnell <arvin@suse.de>
 *		Michal Svec <msvec@suse.cz>
 *		David Reveman <davidr@novell.com>
 */

{

textdomain "rdp";

/* The main () */
y2milestone("----------------------------------------");
y2milestone("RDP proposal started");
y2milestone("Arguments: %1", WFM::Args());

import "RDP";
import "Wizard";
include "rdp/dialogs.ycp";

string func = (string) WFM::Args(0);
map param = (map) WFM::Args(1);
map ret = $[];

/* create a textual proposal */
if(func == "MakeProposal") {
    string proposal = "";
    string warning = nil;
    symbol warning_level = nil;
    boolean force_reset = param["force_reset"]:false;

    if(force_reset) RDP::Reset();
    else	    RDP::Propose();
    ret = $[ "raw_proposal" : [ RDP::Summary() ] ];
}
/* run the module */
else if(func == "AskUser") {
    // single dialog, no need to Export/Import

    Wizard::CreateDialog();
    Wizard::SetDesktopIcon("remote");
    symbol result = (symbol) RemoteMainDialog ();
    UI::CloseDialog();

    y2debug("result=%1", result);
    ret = $[ "workflow_sequence" : result ];
}
/* create titles */
else if(func == "Description") {
    ret = $[
	/* RichText label */
	"rich_text_title" : _("RDP Remote Administration"),
	/* Menu label */
	"menu_title" : _("RDP &Remote Administration"),
	"id" : "admin_stuff",
    ];
}
/* write the proposal */
else if(func == "Write") {
    RDP::Write();
}
/* unknown function */
else {
    y2error("unknown function: %1", func);
}

/* Finish */
y2debug("ret=%1",ret);
y2milestone("RDP proposal finished");
y2milestone("----------------------------------------");
return ret;

/* EOF */
}
